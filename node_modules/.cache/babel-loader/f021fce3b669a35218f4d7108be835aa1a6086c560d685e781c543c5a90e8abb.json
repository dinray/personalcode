{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\practice-project\\\\weather-track\\\\personalcode\\\\src\\\\pages\\\\Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Grid } from '@mui/material';\nimport Sidebar from '../components/Sidebar';\nimport Header from '../components/Header';\nimport WeatherDetails from '../components/WeatherDetails';\nimport TodayForecast from '../components/TodayForecast';\nimport SevenDayForecast from '../components/SevenDayForecast';\nimport Footer from '../components/Footer';\nimport { useTheme } from '@mui/material/styles';\nimport config from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  var _weatherData$wind, _weatherData$weather$;\n  const [weatherData, setWeatherData] = useState(null);\n  const theme = useTheme();\n  const getWeatherApi = async (lat, lon) => {\n    try {\n      const url = `${config.apiUrl}?lat=${lat}&lon=${lon}&appid=${config.apiKey}`;\n      //const url = `${config.apiUrlForRain}?lat=${lat}&lon=${lon}&appid=${config.apiKey}`;\n      //console.log('url=', url);\n      const response = await fetch(url);\n      const result = await response.json();\n      setWeatherData(result);\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n    }\n  };\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        getWeatherApi(latitude, longitude);\n      }, error => {\n        console.error('Error getting location:', error);\n        // Fallback to a default location if needed\n        getWeatherApi(28.6139, 77.2090); // Coordinates for Delhi\n      });\n    } else {\n      console.error('Geolocation is not supported by this browser.');\n      // Fallback to a default location if geolocation is not supported\n      getWeatherApi(28.6139, 77.2090); // Coordinates for Delhi\n    }\n  }, []);\n  console.log('Wind=', weatherData);\n  const styles = {\n    themeColor: {\n      backgroundColor: '#1E2A38',\n      color: '#FFFFFF',\n      minHeight: '100vh'\n    },\n    mainGrid: {\n      padding: '30px 20px 20px 30px'\n    },\n    sidebar: {\n      backgroundColor: '#1E2A38'\n    }\n  };\n  const convertKelvinToCelsius = kelvin => {\n    return Math.trunc(kelvin - 273.15);\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    sx: styles.themeColor,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 2,\n      sx: styles.sidebar,\n      children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 10,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        sx: styles.mainGrid,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(WeatherDetails, {\n            dataLocation: weatherData === null || weatherData === void 0 ? void 0 : weatherData.name,\n            temperature: weatherData ? convertKelvinToCelsius(weatherData.main.temp) : undefined,\n            windSpeed: weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$wind = weatherData.wind) === null || _weatherData$wind === void 0 ? void 0 : _weatherData$wind.speed,\n            weatherDescription: weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$weather$ = weatherData.weather[0]) === null || _weatherData$weather$ === void 0 ? void 0 : _weatherData$weather$.description,\n            cloudiness: weatherData === null || weatherData === void 0 ? void 0 : weatherData.clouds.all\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TodayForecast\n          // realFeel={weatherData ? convertKelvinToCelsius(weatherData.main.feels_like) : undefined}\n          //rainChance={weatherData?.clouds.all}\n          //windSpeed={weatherData?.wind.speed}\n          //uvIndex={weatherData?.uvIndex} // This may need adjustment depending on your data source\n          //condition={weatherData?.weather[0]?.description}\n          , {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(SevenDayForecast, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"1lbFBDISMcfAHU4IsD4I6bFSbCM=\", false, function () {\n  return [useTheme];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Grid","Sidebar","Header","WeatherDetails","TodayForecast","SevenDayForecast","Footer","useTheme","config","jsxDEV","_jsxDEV","Home","_s","_weatherData$wind","_weatherData$weather$","weatherData","setWeatherData","theme","getWeatherApi","lat","lon","url","apiUrl","apiKey","response","fetch","result","json","error","console","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","log","styles","themeColor","backgroundColor","color","minHeight","mainGrid","padding","sidebar","convertKelvinToCelsius","kelvin","Math","trunc","container","sx","children","item","xs","fileName","_jsxFileName","lineNumber","columnNumber","spacing","dataLocation","name","temperature","main","temp","undefined","windSpeed","wind","speed","weatherDescription","weather","description","cloudiness","clouds","all","md","_c","$RefreshReg$"],"sources":["C:/react/practice-project/weather-track/personalcode/src/pages/Home.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Grid } from '@mui/material';\r\nimport Sidebar from '../components/Sidebar';\r\nimport Header from '../components/Header';\r\nimport WeatherDetails from '../components/WeatherDetails';\r\nimport TodayForecast from '../components/TodayForecast';\r\nimport SevenDayForecast from '../components/SevenDayForecast';\r\nimport Footer from '../components/Footer';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport config from '../config';\r\n\r\ninterface WeatherData {\r\n  name: string;\r\n  main: {\r\n    temp: number;\r\n    feels_like: number;\r\n    temp_min: number;\r\n    temp_max: number;\r\n    pressure: number;\r\n    humidity: number;\r\n    sea_level: number;\r\n    grnd_level: number;\r\n  };\r\n  weather: Array<{\r\n    id: number;\r\n    main: string;\r\n    description: string;\r\n    icon: string;\r\n  }>;\r\n  wind: {\r\n    speed: number;\r\n    deg: number;\r\n    gust: number;\r\n  };\r\n  clouds: {\r\n    all: number;\r\n  };\r\n  visibility: number;\r\n  sys: {\r\n    country: string;\r\n    sunrise: number;\r\n    sunset: number;\r\n  };\r\n  dt: number;\r\n  timezone: number;\r\n  id: number;\r\n  cod: number;\r\n}\r\n\r\nconst Home: React.FC = () => {\r\n  const [weatherData, setWeatherData] = useState<WeatherData | null>(null);\r\n  const theme = useTheme();\r\n\r\n  const getWeatherApi = async (lat: number, lon: number) => {\r\n    try {\r\n      const url = `${config.apiUrl}?lat=${lat}&lon=${lon}&appid=${config.apiKey}`;\r\n      //const url = `${config.apiUrlForRain}?lat=${lat}&lon=${lon}&appid=${config.apiKey}`;\r\n      //console.log('url=', url);\r\n      const response = await fetch(url);\r\n      const result = await response.json();\r\n      setWeatherData(result);\r\n    } catch (error) {\r\n      console.error('Error fetching weather data:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          getWeatherApi(latitude, longitude);\r\n        },\r\n        (error) => {\r\n          console.error('Error getting location:', error);\r\n          // Fallback to a default location if needed\r\n          getWeatherApi(28.6139, 77.2090); // Coordinates for Delhi\r\n        }\r\n      );\r\n    } else {\r\n      console.error('Geolocation is not supported by this browser.');\r\n      // Fallback to a default location if geolocation is not supported\r\n      getWeatherApi(28.6139, 77.2090); // Coordinates for Delhi\r\n    }\r\n  }, []);\r\n\r\n  console.log('Wind=', weatherData);\r\n\r\n  const styles = {\r\n    themeColor: {\r\n      backgroundColor: '#1E2A38',\r\n      color: '#FFFFFF',\r\n      minHeight: '100vh',\r\n    },\r\n    mainGrid: {\r\n      padding: '30px 20px 20px 30px',\r\n    },\r\n    sidebar: {\r\n      backgroundColor: '#1E2A38',\r\n    },\r\n  };\r\n\r\n  const convertKelvinToCelsius = (kelvin: number): number => {\r\n    return Math.trunc(kelvin - 273.15);\r\n  };\r\n\r\n  return (\r\n    <Grid container sx={styles.themeColor}>\r\n      <Grid item xs={2} sx={styles.sidebar}>\r\n        <Sidebar />\r\n      </Grid>\r\n      <Grid item xs={10}>\r\n        <Header />\r\n        <Grid container spacing={2} sx={styles.mainGrid}>\r\n          <Grid item xs={12}>\r\n            <WeatherDetails\r\n              dataLocation={weatherData?.name}\r\n              temperature={weatherData ? convertKelvinToCelsius(weatherData.main.temp) : undefined}\r\n              windSpeed={weatherData?.wind?.speed}\r\n              weatherDescription={weatherData?.weather[0]?.description}\r\n              cloudiness={weatherData?.clouds.all}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n          <TodayForecast\r\n             // realFeel={weatherData ? convertKelvinToCelsius(weatherData.main.feels_like) : undefined}\r\n              //rainChance={weatherData?.clouds.all}\r\n              //windSpeed={weatherData?.wind.speed}\r\n              //uvIndex={weatherData?.uvIndex} // This may need adjustment depending on your data source\r\n              //condition={weatherData?.weather[0]?.description}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <SevenDayForecast />\r\n          </Grid>\r\n        </Grid>\r\n        <Footer />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}