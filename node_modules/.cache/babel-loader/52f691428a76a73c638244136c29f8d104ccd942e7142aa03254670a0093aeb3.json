{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\practice-project\\\\weather-track\\\\personalcode\\\\src\\\\components\\\\TodayForecast.tsx\";\nimport React from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodayForecast = () => {\n  const hourlyData = [{\n    time: '6:00 AM',\n    temp: '25¬∞',\n    icon: 'üå•'\n  }, {\n    time: '9:00 AM',\n    temp: '28¬∞',\n    icon: 'üå§'\n  }, {\n    time: '12:00 PM',\n    temp: '33¬∞',\n    icon: '‚òÄÔ∏è'\n  }, {\n    time: '3:00 PM',\n    temp: '34¬∞',\n    icon: '‚òÄÔ∏è'\n  }, {\n    time: '6:00 PM',\n    temp: '32¬∞',\n    icon: '‚òÄÔ∏è'\n  }, {\n    time: '9:00 PM',\n    temp: '30¬∞',\n    icon: 'üå•'\n  }];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Today's Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        mt: 2\n      },\n      children: hourlyData.map((data, index) => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: data.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: data.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: data.temp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = TodayForecast;\nexport default TodayForecast;\nvar _c;\n$RefreshReg$(_c, \"TodayForecast\");","map":{"version":3,"names":["React","Box","Typography","jsxDEV","_jsxDEV","TodayForecast","hourlyData","time","temp","icon","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","sx","display","justifyContent","mt","map","data","index","textAlign","_c","$RefreshReg$"],"sources":["C:/react/practice-project/weather-track/personalcode/src/components/TodayForecast.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Box, Typography } from '@mui/material';\r\n\r\nconst TodayForecast: React.FC = () => {\r\n  const hourlyData = [\r\n    { time: '6:00 AM', temp: '25¬∞', icon: 'üå•' },\r\n    { time: '9:00 AM', temp: '28¬∞', icon: 'üå§' },\r\n    { time: '12:00 PM', temp: '33¬∞', icon: '‚òÄÔ∏è' },\r\n    { time: '3:00 PM', temp: '34¬∞', icon: '‚òÄÔ∏è' },\r\n    { time: '6:00 PM', temp: '32¬∞', icon: '‚òÄÔ∏è' },\r\n    { time: '9:00 PM', temp: '30¬∞', icon: 'üå•' },\r\n  ];\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h5\">Today's Forecast</Typography>\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-around', mt: 2 }}>\r\n        {hourlyData.map((data, index) => (\r\n          <Box key={index} sx={{ textAlign: 'center' }}>\r\n            <Typography variant=\"body2\">{data.time}</Typography>\r\n            <Typography variant=\"h6\">{data.icon}</Typography>\r\n            <Typography variant=\"body1\">{data.temp}</Typography>\r\n          </Box>\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TodayForecast;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,aAAuB,GAAGA,CAAA,KAAM;EACpC,MAAMC,UAAU,GAAG,CACjB;IAAEC,IAAI,EAAE,SAAS;IAAEC,IAAI,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAK,CAAC,EAC5C;IAAEF,IAAI,EAAE,SAAS;IAAEC,IAAI,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAK,CAAC,EAC5C;IAAEF,IAAI,EAAE,UAAU;IAAEC,IAAI,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAK,CAAC,EAC7C;IAAEF,IAAI,EAAE,SAAS;IAAEC,IAAI,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAK,CAAC,EAC5C;IAAEF,IAAI,EAAE,SAAS;IAAEC,IAAI,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAK,CAAC,EAC5C;IAAEF,IAAI,EAAE,SAAS;IAAEC,IAAI,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAK,CAAC,CAC7C;EAED,oBACEL,OAAA,CAACH,GAAG;IAAAS,QAAA,gBACFN,OAAA,CAACF,UAAU;MAACS,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAC;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACtDX,OAAA,CAACH,GAAG;MAACe,EAAE,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,cAAc;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAT,QAAA,EACjEJ,UAAU,CAACc,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC1BlB,OAAA,CAACH,GAAG;QAAae,EAAE,EAAE;UAAEO,SAAS,EAAE;QAAS,CAAE;QAAAb,QAAA,gBAC3CN,OAAA,CAACF,UAAU;UAACS,OAAO,EAAC,OAAO;UAAAD,QAAA,EAAEW,IAAI,CAACd;QAAI;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eACpDX,OAAA,CAACF,UAAU;UAACS,OAAO,EAAC,IAAI;UAAAD,QAAA,EAAEW,IAAI,CAACZ;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eACjDX,OAAA,CAACF,UAAU;UAACS,OAAO,EAAC,OAAO;UAAAD,QAAA,EAAEW,IAAI,CAACb;QAAI;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC;MAAA,GAH5CO,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACS,EAAA,GAxBInB,aAAuB;AA0B7B,eAAeA,aAAa;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}